<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.lahm.learndaemon">

    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--注册前台服务,不需要被外部调用export为false（默认）-->
        <service
            android:name=".service.ForegroundDaemonService"
            android:enabled="true"
            android:exported="false"
            android:process=":daemon_service" />
        <!--注册前台服务的小弟，取消通知服务，进程在notice_service-->
        <service
            android:name=".service.CancelNoticeService"
            android:enabled="true"
            android:exported="false"
            android:process=":notice_service" />
        <activity
            android:name=".screen.SinglePixelActivity"
            android:configChanges="keyboardHidden|orientation|screenSize|navigation|keyboard"
            android:excludeFromRecents="true"
            android:finishOnTaskLaunch="false"
            android:launchMode="singleInstance"
            android:theme="@style/SingleActivityStyle" />
        <!--注册后台播放service-->
        <service
            android:name=".bg.BgPlayService"
            android:enabled="true"
            android:exported="false"
            android:process=":play_process" />
        <!--注册AliveJobService-->
        <service
            android:name=".scheduler.AliveJobService"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <!--拉活，监听系统广播-->
        <receiver
            android:name=".receiver.ReviveReceiver"
            android:process=":revive_process">
            <!--提高优先级-->
            <intent-filter android:priority="0x7fffffff">
                <action android:name="com.tencent.android.tpush.action.SDK" />
                <action android:name="com.tencent.android.tpush.action.INTERNAL_PUSH_MESSAGE" />
                <!-- 【必须】 系统广播：开屏和网络切换 -->
                <action android:name="android.intent.action.USER_PRESENT" />
                <!--网络监听已经在7.0关掉了静态注册-->
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <!-- 【可选】 一些常用的系统广播，增强信鸽service的复活机会，请根据需要选择。当然，你也可以添加APP自定义的一些广播让启动service -->
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
    </application>

</manifest>